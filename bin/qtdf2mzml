#!/bin/bash
#
# Program: qtdf2mzml
# Author:  Eric Deutsch
#
# Copyright (C) 2009-2012 by Eric Deutsch
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the Apache 2.0 License.
#                                                                           
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# full license for more details.                                  
#                                                                           
# You should have received a copy of the Apache 2.0 License
# along with this library; if not, please see the original source at
# https://github.com/edeutsch/qscripts
# 
# Institute for Systems Biology
# 401 Terry Avenue North
# Seattle WA 98109 USA
# spctools@systemsbiology.org
#

set -e          # Tell bash to exit if any statement fails
if [ -z "$HOST" ]; then
  echo "ERROR: Environment variable HOST is not defined. It should have been set automatically in /proteomics/sw/.bashrc"
  exit
fi

if [ "$HOST" != "regis" -a "$HOST" != "regis12" ]; then
  #echo "ERROR: Please execute this from either regis (old cluster) or regis12 (new cluster)"
  echo "ERROR: Please execute this from regis12 (new cluster head node)"
  exit
fi


# -- Local settings -----------------------------------------------------------

   # Default name for jobs in queue
   QNAME=${QNAME:-}
    
   # Default project to submit jobs to
   QPROJECT=${QPROJECT:-}

   # Default number of maximum processors (threads)
   MAX_PROCS=${MAX_PROCS:-80}

   # Set the number of processors
   NP=${NP:-16}

   # Default qsub flags use 80 threads on 1 host (if num_threads = 0)
   QSUBFLAGS="${QSUBFLAGS}"
   
   # Programs
   EXECUTABLE=/proteomics/sw/tdf2mzml/2021-04-06/tdf2mzml/tdf2mzml.py
   
# -----------------------------------------------------------------------------

function parse_options() {
   PERMITTED_EXTENSIONS=$1; shift
   
   INPUTS=
   while [ "$1" ]; do
      case "$1" in 
      --)
         shift
         QSUBFLAGS+=" $*"
         break
         ;;
      -h|--help)
         search_usage
         ;;
      -m|--man)
         POD=`dirname $0`/qgrid_functions
         pod2man -n 'HPC TOOLS' -r 'HPC TOOLS' \
            -c 'Trans-Proteomic Pipeline (TPP)' $POD | nroff -man | less
         exit
         ;;
      -q|--queue)
         Q_OPT="$2"
         shift 2
         ;;
      -o|--out-dir)
         O_OPT="$2"
         shift 2
         ;;
      -v|--verbose)
         V_OPT="true"
         shift
         ;;
      -*)
         search_usage "invalid option $1"
         ;;
      *)
         eval "case "$1" in $PERMITTED_EXTENSIONS) ;; *) search_usage "invalid file $1";; esac"
         [ -f "$1" ] || search_usage "$1 file not found"
         INPUTS+=" $1"
         shift
         ;;
      esac
   done

   [ -z "$INPUTS" ]  && search_usage "Error missing one or more input files"

   if [ ! -z "$O_OPT" ]; then
      mkdir -p "$O_OPT"
      O_OPT=$(rel2abs "$O_OPT")
   fi

   #### Set the QQUEUE value
   if [ ! -z "$Q_OPT" ]; then
      QQUEUE=$Q_OPT
   else
      QQUEUE=active
   fi

   true                 # return "status"
}

#
# Check parameter file if there is one
#
function check_params() {

   QSUBFLAGS="-pe shm 16 ${QSUBFLAGS}"

}

#
# List of commands to run in the qsub script.  Commands are echo'ed out and
# are intended to be read in by the qsubmit() function.
#
function setcmds() {

   prog=tdf2mzml
   
   params="$(rel2abs $P_OPT)"
   input="$(basename $file)"

   # Remove previous results
   rm -f $odir$root.mzML  $odir$root.$prog.qlog
   
   cmds=$(cat <<EOF
   
$EXECUTABLE $file $odir$root.mzML

EOF
)
}


# -- Main ----------------------------------------------------------------------
if [ "$HOST" == "regis" ]; then
  source qgrid_functions
fi
if [ "$HOST" == "regis12" ]; then
  source slurm_functions
fi


# Check for necessary programs
#[ -x "${COMET}" ] || die "Error no comet in your path"

parse_options '*.d' $*
check_params
submit_jobs
