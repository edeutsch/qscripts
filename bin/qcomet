#!/bin/bash
#
# Program: qcomet
# Author:  Eric Deutsch
#
# Copyright (C) 2009-2022 by Eric Deutsch
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the Apache 2.0 License.
#                                                                           
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# full license for more details.                                  
#                                                                           
# You should have received a copy of the Apache 2.0 License
# along with this library; if not, please see the original source at
# https://github.com/edeutsch/qscripts
# 
# Institute for Systems Biology
# 401 Terry Avenue North
# Seattle WA 98109 USA
# spctools@systemsbiology.org
#

# Tell bash to exit if any statement fails
set -e

if [ -z "$HOST" ]; then
  echo "ERROR: Environment variable HOST is not defined. It should have been set automatically in /proteomics/sw/.bashrc"
  exit
fi

if [ "$HOST" != "regis" ] && [ "$HOST" != "regis12" ] && [ "$HOST" != "regis-dev-new" ] && [ "$HOST" != "regis-web-new" ]; then
  echo "ERROR: Please execute this from either regis (old cluster) or regis12 (new cluster)"
  exit
fi


# -- Local settings -----------------------------------------------------------

   # Set TESTMODE to some value to do everything but actually submit the jobs
   TESTMODE=${TESTMODE:-}

   # Default name for jobs in queue
   QNAME=${QNAME:-}

   # Default project to submit jobs to
   QPROJECT=${QPROJECT:-}

   # Limit to the number of cores (threads)
   MAX_PROCS=${MAX_PROCS:-80}

   # Default number of cores (threads) for one job
   NP=${NP:-32}

   # Default qsub flags
   QSUBFLAGS="${QSUBFLAGS:-}"

   # Programs
   COMET=${COMET-`which comet 2>/dev/null`}
   INTERACTPARSER=${INTERACTPARSER-$(which InteractParser || true)}


# -----------------------------------------------------------------------------

#
# Check parameter file 
#
function check_params() {

   NP=$(perl -ne 'print $1 if /^\s*num_threads\s*=\s*(\d+)/' $P_OPT)
   if [[ $NP -gt "$MAX_PROCS" ]]; then
      die "ERROR: num_threads parameter in your comet.params should be set to value between 0 and $MAX_PROCS"
   fi

   DATABASENAME=$(perl -ne 'print $1 if /^\s*database_name\s*=\s*(\S+)/' $P_OPT)
   if [ -z $DATABASENAME ]; then
      die "ERROR: the database_name parameter in your comet.params file needs to be present"
   fi
   if [ ! -f $DATABASENAME ]; then
      die "ERROR: the database_name specified in comet.params file '$DATABASENAME' cannot be found"
   fi

   PEPXML=$(perl -ne 'print $1 if /^\s*output_pepxmlfile\s*=\s*(\d+)/' $P_OPT)
   if [[ $PEPXML -ne 1 ]]; then
      die "ERROR: output_pepxml parameter should be set to 1"
   fi

   if [[ $NP -eq 0 ]]; then
       QSUBFLAGS="-pe serial ${MAX_PROCS} ${QSUBFLAGS}"
   else
       QSUBFLAGS="-pe serial ${NP} ${QSUBFLAGS}"
   fi
}

#
# List of commands to run in the qsub script.  Commands are echo'ed out and
# are intended to be read in by the qsubmit() function.
#
function setcmds() {

   prog=comet
   
   params="$(rel2abs $P_OPT)"
   input="$(basename $file)"

   # Remove previous results
   rm -f $odir$root.pepXML $odir$root.pep.xml  $odir$root.$prog.qlog
   
   cmds=$(cat <<EOF
   
$COMET -P$params -N$odir$root $file
mv $odir$root.pep.xml $odir$root.pepXML

# Use InteractParser to make sure the results are TPP compatible
$INTERACTPARSER $odir$root.pep.xml $odir$root.pepXML -L0 -R9999 \
   -a$idir
rm -f $odir$root.pepXML

EOF
)
}


# -- Main ----------------------------------------------------------------------

# Set up the appropriate common functions
if [ "$HOST" == "regis" ]; then
  source qgrid_functions
fi
if [ "$HOST" == "regis12" ] || [ "$HOST" == "regis-dev-new" ] || [ "$HOST" == "regis-web-new" ]; then
  source slurm_functions
fi

# Check for necessary programs
[ -x "${COMET}" ] || die "ERROR: No comet in your PATH"

# Set up for all input files
search_options comet.params '*.mzML|*.mzXML|*.mgf|*.mzML.gz|*.mzXML.gz' $*
check_params

# For testing, just print out the commands that would be run
if [ ! -z ${TESTMODE} ]; then
  setcmds
  echo $cmds
else
  submit_jobs
fi

exit 0
